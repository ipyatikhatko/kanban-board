// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

// User model
model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  
  // Relationship with KanbanBoard
  kanbanBoards KanbanBoard[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// KanbanBoard model
model KanbanBoard {
  id        Int       @id @default(autoincrement())
  name      String
  description String? 
  createdAt DateTime  @default(now())

  // Relationship with User
  owner     User      @relation(fields: [ownerId], references: [id])
  ownerId   String
  columns   Column[]
}

// Column model
model Column {
  id          Int       @id @default(autoincrement())
  name        String
  description String? 
  orderIndex  Int       @default(autoincrement())
  createdAt   DateTime  @default(now())

  // Relationship with KanbanBoard
  board       KanbanBoard @relation(fields: [boardId], references: [id])
  boardId     Int
  tasks       Task[]
}

// Task model
model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  orderIndex  Int       @default(autoincrement())
  createdAt   DateTime  @default(now())

  // Relationship with Column
  column      Column    @relation(fields: [columnId], references: [id])
  columnId    Int
}
